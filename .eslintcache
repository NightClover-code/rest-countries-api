[{"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\index.tsx":"1","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\AppRouter.tsx":"2","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\App.tsx":"3","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Header.tsx":"4","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountryDetails.tsx":"5","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\index.ts":"6","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\hooks\\useTypedSelector.ts":"7","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\hooks\\useActions.ts":"8","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountriesList.tsx":"9","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Filters.tsx":"10","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\SearchBar.tsx":"11","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\DetailContent.tsx":"12","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\store.ts":"13","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountriesItem.tsx":"14","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\BorderCountries.tsx":"15","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\index.ts":"16","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\action-creators\\index.ts":"17","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\BorderCountry.tsx":"18","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\countriesReducer.ts":"19","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\filteredCountriesReducer.ts":"20","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\currentCodeReducer.ts":"21","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\countryReducer.ts":"22","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\api\\countries.ts":"23","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\action-types\\index.ts":"24","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\changeModeReducer.ts":"25","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\PreviousButton.tsx":"26","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Attribution.tsx":"27"},{"size":349,"mtime":1612207204046,"results":"28","hashOfConfig":"29"},{"size":2347,"mtime":1612378607574,"results":"30","hashOfConfig":"29"},{"size":934,"mtime":1614858598987,"results":"31","hashOfConfig":"29"},{"size":851,"mtime":1612213815621,"results":"32","hashOfConfig":"29"},{"size":2119,"mtime":1612213516653,"results":"33","hashOfConfig":"29"},{"size":109,"mtime":1611930766492,"results":"34","hashOfConfig":"29"},{"size":202,"mtime":1611930766490,"results":"35","hashOfConfig":"29"},{"size":428,"mtime":1614858574752,"results":"36","hashOfConfig":"29"},{"size":1463,"mtime":1612211507893,"results":"37","hashOfConfig":"29"},{"size":1592,"mtime":1612213263952,"results":"38","hashOfConfig":"29"},{"size":1170,"mtime":1612213198699,"results":"39","hashOfConfig":"29"},{"size":1845,"mtime":1612108702421,"results":"40","hashOfConfig":"29"},{"size":511,"mtime":1611931382915,"results":"41","hashOfConfig":"29"},{"size":1450,"mtime":1612213391198,"results":"42","hashOfConfig":"29"},{"size":381,"mtime":1612108702420,"results":"43","hashOfConfig":"29"},{"size":698,"mtime":1612208287197,"results":"44","hashOfConfig":"29"},{"size":5328,"mtime":1614860459761,"results":"45","hashOfConfig":"29"},{"size":1628,"mtime":1612213698830,"results":"46","hashOfConfig":"29"},{"size":1278,"mtime":1614860043493,"results":"47","hashOfConfig":"29"},{"size":759,"mtime":1614859846810,"results":"48","hashOfConfig":"29"},{"size":403,"mtime":1614860024172,"results":"49","hashOfConfig":"29"},{"size":1032,"mtime":1614859983042,"results":"50","hashOfConfig":"29"},{"size":139,"mtime":1612205222269,"results":"51","hashOfConfig":"29"},{"size":801,"mtime":1614859306930,"results":"52","hashOfConfig":"29"},{"size":444,"mtime":1614860057462,"results":"53","hashOfConfig":"29"},{"size":831,"mtime":1612214016060,"results":"54","hashOfConfig":"29"},{"size":471,"mtime":1612378745993,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1a28q0j",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\index.tsx",[],["114","115"],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\AppRouter.tsx",["116","117"],"import { BrowserRouter, Route } from 'react-router-dom';\r\n//importing hooks\r\nimport { useEffect } from 'react';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\n//importing components\r\nimport CountryDetails from './CountryDetails';\r\nimport App from './App';\r\nimport Header from './Header';\r\nimport Attribution from './Attribution';\r\n//app routes\r\nconst AppRouter: React.FC = () => {\r\n  //getting actions & state\r\n  const { setCurrentCode, setColorMode } = useActions();\r\n  const currentCode = useTypedSelector(state => state.currentCode);\r\n  const isLightMode = useTypedSelector(state => state.isLightMode);\r\n  useEffect(() => {\r\n    //getting code from local storage\r\n    const getCurrentCode = () => {\r\n      if (localStorage.getItem('currentCode') === null) {\r\n        localStorage.setItem('currentCode', JSON.stringify(''));\r\n      } else {\r\n        let currentCodeLocal = JSON.parse(localStorage.getItem('currentCode')!);\r\n        setCurrentCode(currentCodeLocal);\r\n      }\r\n    };\r\n    //saving items to localStorage on first render\r\n    getCurrentCode();\r\n  }, []);\r\n  useEffect(() => {\r\n    //saving currentCode to local storage based on currentCode change\r\n    const saveToLocal = () => {\r\n      localStorage.setItem('currentCode', JSON.stringify(currentCode));\r\n    };\r\n    saveToLocal();\r\n  }, [currentCode]);\r\n  useEffect(() => {\r\n    //getting color mode from local storage\r\n    const getCurrentMode = () => {\r\n      if (localStorage.getItem('currentMode') === null) {\r\n        localStorage.setItem('currentMode', JSON.stringify(false));\r\n      } else {\r\n        let currentModeLocal = JSON.parse(localStorage.getItem('currentMode')!);\r\n        setColorMode(currentModeLocal);\r\n      }\r\n    };\r\n    //saving items to localStorage on first render\r\n    getCurrentMode();\r\n  }, []);\r\n  useEffect(() => {\r\n    //saving currentMode to local storage based on currentMode change\r\n    const saveToLocal = () => {\r\n      localStorage.setItem('currentMode', JSON.stringify(isLightMode));\r\n    };\r\n    saveToLocal();\r\n  }, [isLightMode]);\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Route path=\"/\" component={App} exact />\r\n      <Route path=\"/:code\" component={CountryDetails} />\r\n      <Attribution />\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\App.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Header.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountryDetails.tsx",["118"],"//importing styles\r\nimport '../styles/css/details.css';\r\n//random id\"s\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//importing hooks & types\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { useEffect } from 'react';\r\n//importing components\r\nimport PreviousButton from './PreviousButton';\r\nimport DetailContent from '../containers/DetailContent';\r\n//details component\r\nconst CountryDetails: React.FC = () => {\r\n  //getting actions & state\r\n  const { fetchCountry } = useActions();\r\n  const { loading, error, data } = useTypedSelector(state => state.country);\r\n  const currentCode = useTypedSelector(state => state.currentCode);\r\n  const isLightMode = useTypedSelector(state => state.isLightMode);\r\n  useEffect(() => {\r\n    fetchCountry(currentCode);\r\n  }, [currentCode]);\r\n  //returning detail content item;\r\n  const returnDetail = () => {\r\n    //returned country{\r\n    if (data) {\r\n      const {\r\n        name,\r\n        population,\r\n        region,\r\n        nativeName,\r\n        flag,\r\n        capital,\r\n        subregion,\r\n        topLevelDomain,\r\n        currencies,\r\n        languages,\r\n      } = data;\r\n      return (\r\n        <DetailContent\r\n          key={uuidv4()}\r\n          name={name}\r\n          population={population}\r\n          region={region}\r\n          capital={capital}\r\n          flag={flag}\r\n          nativeName={nativeName}\r\n          subregion={subregion}\r\n          topLevelDomain={topLevelDomain}\r\n          currencies={currencies}\r\n          languages={languages}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div\r\n      className={`details__container ${isLightMode ? 'details__light' : ''}`}\r\n    >\r\n      {loading && (\r\n        <div className=\"ui active dimmer\">\r\n          <div className=\"ui loader\"></div>\r\n        </div>\r\n      )}\r\n      <div className=\"wrapper\">\r\n        <PreviousButton />\r\n      </div>\r\n      <div className=\"container\">\r\n        {!loading && !error && returnDetail()}\r\n        {error && <p className=\"error\">{error}</p>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\index.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\hooks\\useTypedSelector.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\hooks\\useActions.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountriesList.tsx",["119"],"//importing react hooks & custom hooks\r\nimport { useEffect } from 'react';\r\nimport { useActions } from '../hooks/useActions';\r\nimport { useTypedSelector } from '../hooks/useTypedSelector';\r\nimport { CountryInterface } from '../state/actions/fetchCountries';\r\n//random id's\r\nimport { v4 as uuidv4 } from 'uuid';\r\n//importing components\r\nimport CountriesItem from './CountriesItem';\r\n//countries component\r\nconst CountriesList: React.FC = () => {\r\n  //getting actions & state\r\n  const { fetchCountries } = useActions();\r\n  const { loading, error, data } = useTypedSelector(\r\n    state => state.filteredCountries\r\n  );\r\n  //fetching countries on first component mount\r\n  useEffect(() => {\r\n    fetchCountries();\r\n  }, []);\r\n  //returned country items\r\n  const returnedItems = data.map(\r\n    ({ name, population, region, flag, capital, code }: CountryInterface) => {\r\n      return (\r\n        <CountriesItem\r\n          key={uuidv4()}\r\n          name={name}\r\n          population={population}\r\n          region={region}\r\n          capital={capital}\r\n          flag={flag}\r\n          code={code}\r\n        />\r\n      );\r\n    }\r\n  );\r\n  return (\r\n    <div className=\"countries__list\">\r\n      {loading && (\r\n        <div className=\"ui active dimmer\">\r\n          <div className=\"ui loader\"></div>\r\n        </div>\r\n      )}\r\n      {!loading && !error && returnedItems}\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Filters.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\SearchBar.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\DetailContent.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\store.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\CountriesItem.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\BorderCountries.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\index.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\action-creators\\index.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\BorderCountry.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\countriesReducer.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\filteredCountriesReducer.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\currentCodeReducer.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\countryReducer.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\api\\countries.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\action-types\\index.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\state\\reducers\\changeModeReducer.ts",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\PreviousButton.tsx",[],"C:\\Users\\ADS\\OneDrive\\Bureau\\Websites\\rest-countries-api-master\\src\\containers\\Attribution.tsx",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":29,"column":6,"nodeType":"126","endLine":29,"endColumn":8,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":49,"column":6,"nodeType":"126","endLine":49,"endColumn":8,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":21,"column":6,"nodeType":"126","endLine":21,"endColumn":19,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":20,"column":6,"nodeType":"126","endLine":20,"endColumn":8,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentCode'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has a missing dependency: 'setColorMode'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'fetchCountry'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'fetchCountries'. Either include it or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [setCurrentCode]",{"range":"148","text":"149"},"Update the dependencies array to be: [setColorMode]",{"range":"150","text":"151"},"Update the dependencies array to be: [currentCode, fetchCountry]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchCountries]",{"range":"154","text":"155"},[1134,1136],"[setCurrentCode]",[1854,1856],"[setColorMode]",[825,838],"[currentCode, fetchCountry]",[715,717],"[fetchCountries]"]